name: api_tools_getlaminas_org

type: php:8.1

size: S

disk: 256

build:
  flavor: none

variables:
  env:
      NVM_VERSION: v0.36.0
      NODE_VERSION: v14.13.1

dependencies:
  nodejs:
    gulp-cli: '~2.2.0'

mounts:
  'data/cache':
    source: local
    source_path: data/cache

hooks:
  build: |
    set -e
    unset NPM_CONFIG_PREFIX
    curl -o- https://raw.githubusercontent.com/creationix/nvm/$NVM_VERSION/install.sh | dash
    export NVM_DIR="$PLATFORM_APP_DIR/.nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
    nvm current
    nvm install $NODE_VERSION
    echo "Installing platform.sh CLI"
    curl -sS https://platform.sh/cli/installer | php
    echo "- Installing asset dependencies"
    (cd asset ; npm install --no-save)
    echo "- Building assets"
    (cd asset ; gulp default)
    echo "- Removing asset dependencies"
    (cd asset ; rm -rf node_modules)
    echo "- Installing Composer 2.2"
    php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    php -r "if (hash_file('sha384', 'composer-setup.php') === '55ce33d7678c5a611085589f1f3ddf8b3c52d662cd01d4ba75c0ee0459970c2200a51f492d557530c71c15d8dba01eae') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
    php composer-setup.php --2.2 --filename=composer
    php -r "unlink('composer-setup.php');"
    chmod +x composer
    echo "- Setting up configuration"
    rm -f config/development.config.php config/autoload/*.local.php
    mv config/autoload/local.php.dist config/autoload/local.php
    echo "- Installing application dependencies"
    ./composer install --no-ansi --no-dev --no-interaction --no-scripts --no-plugins --optimize-autoloader
    ./composer update laminas-api-tools/documentation
    php vendor/bin/laminas get-releases
  deploy: |
    rm -f data/cache/module-*.php

crons:
    snapshot:
        # Take a snapshot automatically every night at 3 am (UTC).
        spec: '0 3 * * *'
        cmd: |
            if [ "$PLATFORM_BRANCH" = master ]; then
                platform snapshot:create --yes --no-wait
            fi
    renewcert:
        # Force a redeploy at 8 am (UTC) on the 14th and 28th of every month.
        spec: '0 8 14,28 * *'
        cmd: |
            if [ "$PLATFORM_BRANCH" = master ]; then
                platform redeploy --yes --no-wait
            fi

web:
  locations:
    '/':
      root: 'public'
      passthru: '/index.php'
      index:
        - index.php
      expires: -1
      scripts: true
      allow: false
      rules:
        \.(css|js|gif|jpe?g|png|ttf|eot|woff2?|otf|cast|mp4|json|html|ico|svg)$:
          allow: true
          expires: 300s
